[build-system]
requires = ["setuptools >= 61", "setuptools-scm >= 6.4"]
build-backend = "setuptools.build_meta"

[project]
name = "usort"
description = "Safe, minimal import sorting"
readme = "README.md"
requires-python = ">=3.6"
license = {file="LICENSE"}
authors = [
    {name="Tim Hatch", email="thatch@fb.com"},
    {name="John Reese", email="jreese@fb.com"},
    {name="Meta"},
]
keywords = ["imports", "usort", "isort"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "attrs >= 21.2.0",
    "click >= 7.0.0",
    "LibCST >= 0.3.7",
    "moreorless >= 0.3.0",
    "stdlibs >= 2021.4.1",
    "toml >= 0.10.0",
    "trailrunner >= 1.0",
]
dynamic = ["version"]

[project.scripts]
usort = "usort.__main__:main"

[project.urls]
Documentation="https://usort.readthedocs.io"
Github="https://github.com/facebookexperimental/usort"
Homepage="https://usort.readthedocs.io"

[tool.coverage.run]
branch = true
parallel = true
include = ["usort/*"]
omit = ["usort/tests/*"]

[tool.coverage.report]
fail_under = 70
precision = 1
show_missing = true
skip_covered = true

[tool.mypy]
ignore_missing_imports = true

[tool.setuptools]
packages = ["usort"]

[tool.setuptools_scm]
write_to = "usort/version.py"

[tool.thx]
default = ["format", "docs", "test", "lint", "coverage"]
python_versions = ["3.6", "3.7", "3.8", "3.9", "3.10"]
watch_paths = ["docs", "usort"]
module = "usort"
srcs = "usort"

[tool.thx.jobs]
combine = {run="python -m coverage combine", once=true, requires="test"}
coverage = {run="python -m coverage report", once=true, requires="combine", show_output=true}
deps = "python -m pessimist --requirements= -c 'python -m usort --help' ."
docs = {run="sphinx-build -b html docs html", once=true}
format = {run="python -m ufmt format {srcs}", once=true}
test = "python -m coverage run -m {module}.tests"

[tool.thx.jobs.lint]
run = [
    "python -m mypy --strict {module} --install-types --non-interactive",
    "python -m flake8 {srcs}",
    "python -m ufmt check {srcs}",
    "bash check_copyright.sh",
]
parallel = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py36, py37, py38

[testenv]
deps = -rrequirements-dev.txt
whitelist_externals = make
commands =
    make test
setenv =
    py{36,37,38}: COVERAGE_FILE={envdir}/.coverage
"""
